resources: ####################################################################

- name: ((repo))
  type: git
  source:
    uri: git://github.com/open-switch/SAI
    branch: "dell.1.2+"
- name: ((repo))-tag
  type: git
  source:
    uri: git://github.com/open-switch/SAI
    branch: "dell.1.2+"
    tag_filter: "debian/*"
- name: aptly
  type: aptly-resource
  source:
    api: http://aptly:8080/api
- name: send-failure-email
  type: email
  source:
    smtp:
      host: email-smtp.us-west-2.amazonaws.com
      port: "587"
      username: ((smtp.username))
      password: ((smtp.password))
    from: opx@openswitch.net
    to:
    -  tyler.heucke@dell.com

resource_types: ###############################################################

- name: aptly-resource
  type: docker-image
  source:
    repository: opxhub/aptly-resource
- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource

jobs: #########################################################################

- name: publish-unstable
  public: true
  build_logs_to_retain: 100
  plan:
  - get: ((repo))
    trigger: true
  - task: git-buildpackage
    privileged: true
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: opxhub/build
      inputs:
      - name: ((repo))
      outputs:
      - name: pkg
      params:
        REPO: ((repo))
      run:
        path: bash
        args:
        - -euc
        - |
          # workaround for hard-coded /mnt directory in opx_build script
          git clone $REPO /mnt/$REPO
          pushd /mnt/$REPO
          # bump version with date and git sha
          v="$(dpkg-parsechangelog -SVersion)"
          if [[ $v == *"+"* ]]; then s="."; else s="+"; fi
          v="${v}${s}git$(date +%Y%m%d).$(git rev-parse --short HEAD)"
          debchange \
            --newversion "$v" \
            --distribution unstable \
            --controlmaint \
            "$(git log --oneline -1)"
          dpkg-parsechangelog --count 1
          popd
          # build packages
          pushd /mnt/
          /opt/opx-build/scripts/opx_build $REPO
          popd
          # copy packages to output
          cp -t pkg/ /mnt/*.deb /mnt/*.build /mnt/*.dsc /mnt/*.tar.gz
  - put: aptly
    params:
      aptly_repo: opx-unstable
      publish_dist: unstable
  on_failure:
    put: send-failure-email
    params:
      subject_text: "${BUILD_JOB_NAME} for ${BUILD_PIPELINE_NAME} failed"
      body_text: "((build-url))"

- name: publish-testing
  public: true
  build_logs_to_retain: 100
  plan:
  - get: ((repo))-tag
    trigger: true
  - task: git-buildpackage
    privileged: true
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: opxhub/build
          tag: testing
      inputs:
      - name: ((repo))-tag
        path: ((repo))
      outputs:
      - name: pkg
      params:
        REPO: ((repo))
      run:
        path: bash
        args:
        - -euc
        - |
          # workaround for hard-coded /mnt directory in opx_build script
          git clone $REPO /mnt/$REPO
          # print changelog entry that triggered this pipeline
          pushd /mnt/$REPO
          dpkg-parsechangelog --count 1
          popd
          # build packages
          pushd /mnt/
          /opt/opx-build/scripts/opx_build $REPO
          popd
          # copy packages to output
          cp -t pkg/ /mnt/*.deb /mnt/*.build /mnt/*.dsc /mnt/*.tar.gz
  - put: aptly
    params:
      aptly_repo: opx-testing
      publish_dist: testing
  on_failure:
    put: send-failure-email
    params:
      subject_text: "${BUILD_JOB_NAME} for ${BUILD_PIPELINE_NAME} failed"
      body_text: "((build-url))"

